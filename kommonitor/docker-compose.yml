version: '3.8'
name: kommonitor-dev

networks:
  realtime_simulation:
    driver: bridge
    name: ${NETWORK_NAME}

services:
  keycloak:
    image: kommonitor/keycloak:26.3.4-postgres
    entrypoint: /opt/keycloak/bin/kc.sh start-dev
    container_name: keycloak
    restart: unless-stopped
    volumes:
      - ./realms/realm-export-kommonitor.json:/opt/keycloak/data/import/realm.json
    command:
      - --import-realm
      - --features=admin-fine-grained-authz:v1,scripts,token-exchange:v1
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - ${NETWORK_NAME}
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=dev-file

  kommonitor-client:
    image: 'kommonitor/web-client:4.2.1'
    container_name: kommonitor-client
    restart: unless-stopped
    volumes:
      - ./storage/client/config-storage-server.json:/usr/share/nginx/html/config/config-storage-server.json
    environment:
      - KOMMONITOR_NAME=kommonitor-web-client
    env_file:
      - ./config/client.env
    ports:
      - 8084:80
    networks:
      - ${NETWORK_NAME}

  kommonitor-client-config:
    image: 'kommonitor/client-config:2.1.0'
    container_name: kommonitor-client-config
    restart: unless-stopped
    ports:
      - 8088:8088
    networks:
      - ${NETWORK_NAME}
    volumes:
      - ./storage/config_server:/code/configStorage
    environment:
      - KOMMONITOR_NAME=kommonitor-client-config
    env_file:
      - ./config/client-config.env

  kommonitor-importer:
    image: kommonitor/importer:4.1.1
    container_name: kommonitor-importer
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME}
    ports:
      - 8087:8087
    volumes:
      - ./storage/importer:/tmp/kommonitor
    env_file:
      - ./config/importer.env
      - ./config/keycloak.env

  kommonitor-db:
    image: postgis/postgis:15-master
    container_name: kommonitor-db
    restart: unless-stopped
    networks:
      - ${NETWORK_NAME}
    ports:
      - 5432:5432
    volumes:
      - ./storage/database/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./config/db.env

  kommonitor-data-management:
    image: kommonitor/data-management:5.1.1
    container_name: kommonitor-data-management
    restart: unless-stopped
    depends_on:
      kommonitor-db:
        condition: service_healthy
    ports:
      - "8085:8085"
    networks:
      - ${NETWORK_NAME}
    links:
      - kommonitor-db
    env_file:
      - ./config/data-management.env
      - ./config/keycloak.env
